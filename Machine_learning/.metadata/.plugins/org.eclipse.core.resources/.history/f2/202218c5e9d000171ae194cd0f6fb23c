package org.bizruntime.data_frame;

import java.util.Arrays;
import java.util.List;

import org.apache.spark.ml.linalg.Vectors;
import org.apache.spark.SparkContext;
import org.apache.spark.ml.linalg.VectorUDT;
import org.apache.spark.ml.stat.ChiSquareTest;
import org.apache.spark.sql.Dataset;
import org.apache.spark.sql.Row;
import org.apache.spark.sql.RowFactory;
import org.apache.spark.sql.SparkSession;
import org.apache.spark.sql.types.*;
public class Hypothesis_testing {

	static SparkSession spark = SparkSession
			  .builder()
			  .appName("chisquare")
			  .master("spark://192.168.1.15:7077")
			  .getOrCreate();
	static SparkContext  sc = (SparkContext) new SparkContext().addedJars();
	public static void main(String[] args) {
		List<Row> data = Arrays.asList(
				  RowFactory.create(0.0, Vectors.dense(0.5, 10.0)),
				  RowFactory.create(0.0, Vectors.dense(1.5, 20.0)),
				  RowFactory.create(1.0, Vectors.dense(1.5, 30.0)),
				  RowFactory.create(0.0, Vectors.dense(3.5, 30.0)),
				  RowFactory.create(0.0, Vectors.dense(3.5, 40.0)),
				  RowFactory.create(1.0, Vectors.dense(3.5, 40.0))
				);

				StructType schema = new StructType(new StructField[]{
				  new StructField("label", DataTypes.DoubleType, false, Metadata.empty()),
				  new StructField("features", new VectorUDT(), false, Metadata.empty()),
				});

				Dataset<Row> df = spark.createDataFrame(data, schema);
				Row r = ChiSquareTest.test(df, "features", "label").head();
				System.out.println("pValues: " + r.get(0).toString());
				System.out.println("degreesOfFreedom: " + r.getList(1).toString());
				System.out.println("statistics: " + r.get(2).toString());
		

	}

}
