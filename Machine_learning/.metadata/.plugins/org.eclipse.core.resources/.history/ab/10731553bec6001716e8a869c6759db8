package org.bizruntime.data_type;

import org.apache.spark.mllib.linalg.Vector;
import org.apache.spark.mllib.linalg.Vectors;
import org.apache.spark.mllib.regression.LabeledPoint;
import org.apache.spark.mllib.util.MLUtils;
import org.apache.spark.SparkConf;
import org.apache.spark.SparkContext;
import org.apache.spark.api.java.JavaRDD;
import org.apache.spark.mllib.linalg.Matrix;
import org.apache.spark.mllib.linalg.Matrices;



public class App 
{
	static SparkConf conf = new SparkConf().setAppName("wordCount").setMaster("local[2]");
	static SparkContext sc = SparkContext.getOrCreate(conf);
    public static void main( String[] args )
    {
    	
    	//Vector();
    	Labelpoint();
    	matrix();
    	
    }
    public static void Vector()
    {
        Vector dv = Vectors.dense(1.0, 0.0, 3.0);
    	
    	System.out.println(dv);
    	
    	Vector sv = Vectors.sparse(3, new int[] {0, 2}, new double[] {1.0, 3.0});
    	
    	System.out.println(sv);
    	
    }
    public static void Labelpoint()
    {
    	LabeledPoint dpos = new LabeledPoint(1.0, Vectors.dense(1.0, 0.0, 3.0));
    	
    	System.out.println(dpos);
    	
    	LabeledPoint dneg = new LabeledPoint(0.0, Vectors.dense(1.0, 0.0, 3.0));
    	
    	System.out.println(dneg);
    	
        LabeledPoint spos = new LabeledPoint(1.0, Vectors.sparse(3, new int[] {0, 2}, new double[] {1.0, 3.0}));
    	
    	System.out.println(spos);
    	
    	LabeledPoint sneg = new LabeledPoint(0.0, Vectors.sparse(3, new int[] {0, 2}, new double[] {1.0, 3.0}));
    	
    	System.out.println(sneg);
    	
    	
    	JavaRDD<LabeledPoint> examples =  MLUtils.loadLibSVMFile(sc, "C:\\Users\\bizruntime41\\Documents\\java\\workspace\\Machine_learning\\sample_libsvm_data.txt").toJavaRDD();
        System.out.println(examples.count());
    }
    public static void matrix()
    {
    	Matrix dm = Matrices.dense(3, 2, new double[] {1.0, 3.0, 5.0, 2.0, 4.0, 6.0});
    	System.out.println(dm);
    	System.out.println("+++++++++++++++");
    	
    	Matrix sm = Matrices.sparse(3, 2, new int[] {0, 1, 3}, new int[] {0, 2, 1}, new double[] {9, 6, 8});
    	System.out.println(sm);
    	
    	//JavaRDD personRDD = sc.parallelize(List(Vectors. dense(150,60,25), Vectors.dense(300,80,40))) 
    	
    }
}
