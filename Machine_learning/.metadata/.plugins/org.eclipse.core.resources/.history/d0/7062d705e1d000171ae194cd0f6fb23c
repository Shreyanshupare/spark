package org.bizruntime.data_frame;

import java.util.Arrays;
import java.util.List;

import org.apache.spark.ml.linalg.VectorUDT;
import org.apache.spark.ml.linalg.Vectors;
import org.apache.spark.sql.Dataset;
import org.apache.spark.sql.Row;
import org.apache.spark.sql.RowFactory;
import org.apache.spark.sql.SparkSession;
import org.apache.spark.sql.types.Metadata;
import org.apache.spark.sql.types.StructField;
import org.apache.spark.sql.types.StructType;
import org.apache.spark.ml.stat.Correlation;
public class correlation_df 
{
    public static void main( String[] args )
    {
    	List<Row> data = Arrays.asList(
    			  RowFactory.create(Vectors.sparse(4, new int[]{0, 3}, new double[]{1.0, -2.0})),
    			  RowFactory.create(Vectors.dense(4.0, 5.0, 0.0, 3.0)),
    			  RowFactory.create(Vectors.dense(6.0, 7.0, 0.0, 8.0)),
    			  RowFactory.create(Vectors.sparse(4, new int[]{0, 3}, new double[]{9.0, 1.0}))
    			);
    	System.out.println(data);
    	StructType schema = new StructType(new StructField[]{new StructField("features", new VectorUDT(), false, Metadata.empty()),});
    	System.out.println(schema.toVector());
    	SparkSession spark = SparkSession
    			  .builder()
    			  .appName("Java Spark SQL basic example")
    			  .config("spark.some.config.option", "some-value")
    			  .getOrCreate();
    	
    	Dataset<Row> df = spark.createDataFrame(data, schema);
    	Row r1 = Correlation.corr(df, "features").head();
    	System.out.println("Pearson correlation matrix:\n" + r1.get(0).toString());

    	Row r2 = Correlation.corr(df, "features", "spearman").head();
    	System.out.println("Spearman correlation matrix:\n" + r2.get(0).toString());
    }
}
