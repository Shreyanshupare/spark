<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.apache.spark.api.java.JavaRDD"/>
<fullyQualifiedTypeName name="org.apache.spark.api.java.JavaDoubleRDD"/>
<fullyQualifiedTypeName name="org.apache.spark.ml.linalg.Matrix"/>
<fullyQualifiedTypeName name="org.apache.spark.mllib.linalg.Matrix"/>
<fullyQualifiedTypeName name="scala.Tuple2"/>
<fullyQualifiedTypeName name="org.spark_project.guava.collect.ImmutableMap"/>
<fullyQualifiedTypeName name="org.apache.spark.api.java.JavaPairRDD"/>
<fullyQualifiedTypeName name="org.apache.spark.mllib.stat.test.ChiSqTestResult"/>
<fullyQualifiedTypeName name="org.apache.spark.mllib.linalg.Matrices"/>
<fullyQualifiedTypeName name="org.apache.spark.mllib.regression.LabeledPoint"/>
<fullyQualifiedTypeName name="org.apache.spark.streaming.api.java.JavaStreamingContext"/>
<fullyQualifiedTypeName name="org.apache.spark.streaming.Duration"/>
<fullyQualifiedTypeName name="org.apache.spark.streaming.api.java.JavaReceiverInputDStream"/>
<fullyQualifiedTypeName name="org.apache.spark.streaming.api.java.JavaDStream"/>
<fullyQualifiedTypeName name="org.apache.spark.mllib.stat.test.BinarySample"/>
<fullyQualifiedTypeName name="org.apache.spark.mllib.stat.test.StreamingTest"/>
<fullyQualifiedTypeName name="org.apache.spark.mllib.stat.test.StreamingTestResult"/>
<fullyQualifiedTypeName name="org.apache.spark.mllib.stat.KernelDensity"/>
<fullyQualifiedTypeName name="java.io.Serializable"/>
<fullyQualifiedTypeName name="org.apache.spark.ml.util.DefaultParamsReader.Metadata"/>
<fullyQualifiedTypeName name="org.apache.spark.ml.feature.Tokenizer"/>
<fullyQualifiedTypeName name="org.apache.spark.ml.feature.HashingTF"/>
<fullyQualifiedTypeName name="org.apache.spark.ml.feature.IDF"/>
<fullyQualifiedTypeName name="org.apache.spark.ml.feature.IDFModel"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="java.util.Arrays"/>
<fullyQualifiedTypeName name="org.apache.spark.sql.RowFactory"/>
<fullyQualifiedTypeName name="org.apache.spark.sql.types.StructType"/>
<fullyQualifiedTypeName name="org.apache.spark.sql.types.StructField"/>
<fullyQualifiedTypeName name="org.apache.spark.sql.types.DataTypes"/>
<fullyQualifiedTypeName name="org.apache.spark.sql.types.Metadata"/>
<fullyQualifiedTypeName name="org.apache.spark.ml.feature.Binarizer"/>
<fullyQualifiedTypeName name="org.apache.spark.ml.linalg.Vectors"/>
<fullyQualifiedTypeName name="org.apache.spark.ml.linalg.VectorUDT"/>
<fullyQualifiedTypeName name="org.apache.spark.ml.feature.PCAModel"/>
<fullyQualifiedTypeName name="org.apache.spark.ml.feature.PCA"/>
<fullyQualifiedTypeName name="org.apache.spark.ml.feature.PolynomialExpansion"/>
<fullyQualifiedTypeName name="org.apache.spark.sql.Dataset"/>
<fullyQualifiedTypeName name="org.apache.spark.sql.Row"/>
<fullyQualifiedTypeName name="org.apache.spark.ml.clustering.KMeans"/>
<fullyQualifiedTypeName name="org.apache.spark.mllib.clustering.KMeansModel"/>
<fullyQualifiedTypeName name="org.apache.spark.ml.clustering.KMeansModel"/>
<fullyQualifiedTypeName name="java.util.Vector"/>
<fullyQualifiedTypeName name="org.apache.spark.ml.linalg.Vector"/>
<fullyQualifiedTypeName name="org.apache.spark.ml.clustering.LDA"/>
<fullyQualifiedTypeName name="org.apache.spark.ml.clustering.LDAModel"/>
<fullyQualifiedTypeName name="org.apache.spark.ml.clustering.BisectingKMeans"/>
<fullyQualifiedTypeName name="org.apache.spark.ml.clustering.BisectingKMeansModel"/>
<fullyQualifiedTypeName name="org.apache.spark.ml.clustering.GaussianMixture"/>
<fullyQualifiedTypeName name="org.apache.spark.ml.clustering.GaussianMixtureModel"/>
</qualifiedTypeNameHistroy>
